<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://pixijs.com/blog</id>
    <title>PixiJS Blog</title>
    <updated>2023-10-03T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://pixijs.com/blog"/>
    <subtitle>PixiJS Blog</subtitle>
    <icon>https://pixijs.com/images/favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[PixiJS v8 Beta! üéâ]]></title>
        <id>https://pixijs.com/blog/pixi-v8-beta</id>
        <link href="https://pixijs.com/blog/pixi-v8-beta"/>
        <updated>2023-10-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PixiJS v8 The Future of 2D Web Graphics Is (almost!) Here!]]></summary>
        <content type="html"><![CDATA[<p>We're thrilled to offer an exclusive preview of the future of 2D web graphics with the Beta release of PixiJS v8. Although not yet finalized, this Beta iteration is packed with killer performance improvements and features we're eager for you to start playing with!</p><p>Over the course of a decade‚Äîyes, you read that right, ten years!‚Äîwe've implemented significant changes to the PixiJS engine. But the advancements in this new release are among the most monumental we've ever made!</p><p>Two driving factors catalysed our approach to re-engineering the codebase and rendering pipeline in v8:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1--embracing-webgpu">1. üòç Embracing WebGPU<a href="#1--embracing-webgpu" class="hash-link" aria-label="Direct link to 1. üòç Embracing WebGPU" title="Direct link to 1. üòç Embracing WebGPU">‚Äã</a></h3><p><img loading="lazy" alt="PixiJS + webGPU = love" src="/assets/images/image-1-82838aaed491ecba56cb42c2ee5aa1fa.png" width="1390" height="322" class="img_ev3q"></p><p>The newcomer WebGPU offers a substantial performance improvement over its predecessor, WebGL. It propels web computations and graphics into a new era, providing a more efficient and robust API. Soon, it will be the go-to method for rendering most GPU-powered content on the web.</p><p>This shift is reminiscent of PixiJS's initial launch. At that time, WebGL was new and only available in a handful of desktop browsers, while Canvas was ubiquitous. PixiJS's standout feature was its ability to first attempt rendering with WebGL and then fall back to Canvas as a Plan B. This approach allowed PixiJS content to immediately benefit as WebGL gained traction. Fast forward to today, and WebGL is now <a href="https://caniuse.com/webgl" target="_blank" rel="noopener noreferrer">available on 95% of browsers</a>.</p><p>History is repeating itself with WebGPU, currently supported in only a few desktop browsers and roughly <a href="https://caniuse.com/webgpu" target="_blank" rel="noopener noreferrer">27% of the market</a>. However, it's only a matter of time before it becomes universally supported. PixiJS aims to execute the same fallback strategy, allowing you to always leverage the best technology available without needing to rewrite your code. This is precisely what version 8 achieves and will future proof everything we make for another ten years :D</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2--turbocharging-performance">2. üöÄ Turbocharging Performance<a href="#2--turbocharging-performance" class="hash-link" aria-label="Direct link to 2. üöÄ Turbocharging Performance" title="Direct link to 2. üöÄ Turbocharging Performance">‚Äã</a></h3><p><img loading="lazy" alt="bunnies" src="/assets/images/image-72e0ca7d8183d62c10a0f5e8dcc4ebda.png" width="1600" height="718" class="img_ev3q"></p><p>PixiJS has always been synonymous with speed and high-performance graphics. With v8, we've revisited our architecture to optimize both static and dynamic rendering. While v7 is fast, it operates as a somewhat ‚Äòna√Øve‚Äô renderer.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="v7-approach">v7 approach:<a href="#v7-approach" class="hash-link" aria-label="Direct link to v7 approach:" title="Direct link to v7 approach:">‚Äã</a></h4><ol><li>Traverse the scene graph and make sure all the transforms are correct</li><li>Traverse the scene graph a second time and do the following<ul><li>Build batches to render</li><li>Upload the data to the GPU</li><li>Draw the batch to the screen.</li></ul></li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="v8-approach">v8 approach<a href="#v8-approach" class="hash-link" aria-label="Direct link to v8 approach" title="Direct link to v8 approach">‚Äã</a></h4><ol><li>Update the transform of <em>only things that changed</em></li><li>Traverse the scene graph and construct a set of instructions.</li><li>Upload all scene data to GPU in one go.</li><li>Execute rendering based on the instructions.</li></ol><p>There are three key changes to this loop that give us a performance bump.</p><ul><li>First, we update only the elements that have changed. If nothing has moved, no code is executed, optimizing computational overhead.</li><li>Second, if the scene graph remains unchanged in subsequent frames, we reuse the existing rendering instructions. This avoids the overhead of reconstructing these instructions for each frame.</li><li>Third, if no elements in the scene change position, the data upload step (Step 3) is entirely skipped, thereby saving bandwidth and further reducing computational work.</li></ul><p>The net effect of these improvements? A decent performance leap across varying use-cases:</p><p><strong>CPU</strong> = time spent by the cpu rendering a single frame
<strong>GPU</strong> = time spend by the gpu rendering a single frame</p><table><thead><tr><th>Bunny Situation</th><th>V7 CPU</th><th>V8 CPU</th><th>CPU Dif</th><th>V7 GPU</th><th>V8 GPU</th><th>GPU dif</th></tr></thead><tbody><tr><td>100k sprites all moving</td><td>~50ms</td><td>~15ms</td><td><div style="background-color:lightgreen;color:black">233%</div></td><td>~9ms</td><td>~2ms</td><td><div style="background-color:lightgreen;color:black">350%</div></td></tr><tr><td>100k sprites not moving</td><td>~21ms</td><td>~0.12ms</td><td><div style="background-color:lightgreen;color:black">17417%</div></td><td>~9ms</td><td>~0.5ms</td><td><div style="background-color:lightgreen;color:black">1700%</div></td></tr><tr><td>100k sprites (changing scene structure)</td><td>~50ms</td><td>~24ms</td><td><div style="background-color:lightgreen;color:black">108%</div></td><td>~9ms</td><td>~2ms</td><td><div style="background-color:lightgreen;color:black">350%</div></td></tr></tbody></table><p>These benchmark numbers are based on this Bunnymark test that you can try yourself!</p><ul><li><a href="https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v7&amp;count=100000&amp;renderer=webgpu" target="_blank" rel="noopener noreferrer">v7 Bunnymark</a></li><li><a href="https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v8&amp;count=100000&amp;renderer=webgpu" target="_blank" rel="noopener noreferrer">v8 Bunnmark - WebGPU</a></li><li><a href="https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v8&amp;count=100000&amp;renderer=webgl" target="_blank" rel="noopener noreferrer">v8 Bunnmark - WebGL</a></li><li><a href="https://github.com/GoodBoyDigital/pixi-bunnymark" target="_blank" rel="noopener noreferrer">Repo</a></li></ul><p>Please have a play, you can fiddle with the parameters in the url to change the number of bunnies. Curious to see what numbers all of you get!</p><p>Best of all, these improvements apply to WebGPU <em>and</em> the WebGL renderer. As with all of PixiJs‚Äôs party tricks, this all happens automatically :D</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="but-wait-theres-more">But Wait, There's More!<a href="#but-wait-theres-more" class="hash-link" aria-label="Direct link to But Wait, There's More!" title="Direct link to But Wait, There's More!">‚Äã</a></h3><p>While the two key drivers behind this overhaul were performance and usability, we didn't stop there. We've seized this opportunity to enhance the API and introduce a plethora of new features to the engine‚Äîfar too many to encapsulate in a single post!</p><p>Stay tuned for upcoming blog posts where we'll delve deeper into these additional improvements and API refinements, empowering you to create even more remarkable projects. For a comprehensive overview of what's new, don't miss the <a href="https://github.com/pixijs/pixijs/releases/tag/v8.0.0-beta.0" target="_blank" rel="noopener noreferrer"><strong>release notes</strong></a>.</p><p>As a crucial note, PixiJS v8 retains much of the familiar API despite undergoing significant internal updates. Our changes are geared toward making PixiJS more robust and user-friendly. When you encounter modifications, rest assured that the v7 methodology will continue to work‚Äîyou'll simply see a deprecation warning, guiding you towards optimal practices.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="over-to-you">Over to you!<a href="#over-to-you" class="hash-link" aria-label="Direct link to Over to you!" title="Direct link to Over to you!">‚Äã</a></h3><p>As we progress toward the release candidate, now is the perfect time for you to dive in and explore v8. Your feedback at this stage is invaluable for fine-tuning our engine. We invite you to share your thoughts‚Äîthe good, the bad, and the ugly‚Äîreport bugs, and even contribute code. Together, we can elevate PixiJS to unprecedented heights.</p><p>üëá Don't wait‚Äîdive right in!
<a href="https://github.com/pixijs/pixijs/tree/next-v8" target="_blank" rel="noopener noreferrer">Explore the PixiJS v8 Codebase on GitHub</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="steps-to-install">Steps to install:<a href="#steps-to-install" class="hash-link" aria-label="Direct link to Steps to install:" title="Direct link to Steps to install:">‚Äã</a></h3><p>via npm you can install the beta version like so:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install pixi.js@prerelease-v8</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>then you can create the most appropriate renderer using the new <code>autoDetectRenderer</code> function:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import { autoDetectRenderer } from "pixi.js";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">async function init()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const renderer = await autoDetectRenderer({</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // any settings</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }); // will return a WebGL or WebGPU renderer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Start experimenting with PixiJS v8 Beta today and join us in shaping the future of 2D web graphics! üéâ</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="keep-in-touch">Keep in touch!<a href="#keep-in-touch" class="hash-link" aria-label="Direct link to Keep in touch!" title="Direct link to Keep in touch!">‚Äã</a></h3><p>"To stay in the loop, we invite you to follow <a href="https://twitter.com/Doormat23" target="_blank" rel="noopener noreferrer">Doormat23</a> and <a href="https://twitter.com/PixiJS" target="_blank" rel="noopener noreferrer">PixiJS</a> on social media, where we'll be unveiling more exciting updates shortly. Alternatively, you can join our vibrant community on <a href="https://discord.gg/nrnDP9wtyX" target="_blank" rel="noopener noreferrer">Discord</a> for direct engagement and real-time conversations.</p>]]></content>
        <author>
            <name>GoodBoyDigital</name>
            <uri>https://github.com/GoodBoyDigital</uri>
        </author>
        <category label="PixiJS" term="PixiJS"/>
        <category label="WebGPU" term="WebGPU"/>
        <category label="WebGL" term="WebGL"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing the PixiJS Universe!]]></title>
        <id>https://pixijs.com/blog/pixi-universe</id>
        <link href="https://pixijs.com/blog/pixi-universe"/>
        <updated>2023-02-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PixiJS v2 Website Brief Description]]></summary>
        <content type="html"><![CDATA[<p>We are excited to announce the launch of the PixiJS Universe, an initiative to further enhance the capabilities of PixiJS and make it even easier for developers to create amazing games and apps.</p><p>For years, PixiJS has been the most popular 2D renderer for the web, but it was always "just a rendering engine." The community has created many great tools to help developers build games and applications with PixiJS, but we lacked the manpower to maintain and improve these tools, causing fragmentation in the community.
To address this, Playco has assembled a dedicated team of developers who will work on PixiJS full-time. Over the next 12 months, we have more than ten projects planned, and in this announcement, we would like to introduce some of them.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="phase-1">Phase 1‚Äã<a href="#phase-1" class="hash-link" aria-label="Direct link to Phase 1‚Äã" title="Direct link to Phase 1‚Äã">‚Äã</a></h2><p>We have several new projects in the works, and we are releasing them in four phases over the year. We are currently nearing the end of phase 1, which has seen the release of several exciting new tools and libraries for PixiJS:</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-website">PixiJS Website‚Äã<a href="#pixijs-website" class="hash-link" aria-label="Direct link to PixiJS Website‚Äã" title="Direct link to PixiJS Website‚Äã">‚Äã</a></h3><p>First up we are excited to announce that we will be releasing a beta version of our new website for PixiJS.</p><p>The current documentation has suffered from long-term organic growth over the years with little structure and as such much of the PixiJS documentation is fragmented across multiple sites. This new website will put everything you need in one place and be easily searchable.</p><p>We are also planning on improving the documentation and adding more guides and examples, as well as considering translating the documentation into other languages.</p><p>If you have any ideas on how to improve the site please let us know!</p><ul><li><a href="https://github.com/pixijs/pixijs.com" target="_blank" rel="noopener noreferrer">Github Repo</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-react">PixiJS React‚Äã<a href="#pixijs-react" class="hash-link" aria-label="Direct link to PixiJS React‚Äã" title="Direct link to PixiJS React‚Äã">‚Äã</a></h3><p>Next up is PixiJS React. A library that provides a way to use PixiJS in React applications. PixiJS React is a continuation of the <code>react-pixi</code> library created by Patrick Brouwer, which has been widely used by the PixiJS community in React projects. PixiJS has taken over maintenance of the library and is dedicated to improving the library's performance, documentation, and support for new features.</p><p>The library provides an easy-to-use interface that makes it easy for developers to create React applications with PixiJS. The library integrates all the core features of PixiJS and allows you to create custom components for 3rd party libraries.</p><ul><li><a href="https://github.com/pixijs/pixi-react" target="_blank" rel="noopener noreferrer">Github Repo</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-open-games">PixiJS Open Games‚Äã<a href="#pixijs-open-games" class="hash-link" aria-label="Direct link to PixiJS Open Games‚Äã" title="Direct link to PixiJS Open Games‚Äã">‚Äã</a></h3><p>We have now released a new repository called "PixiJS Open Games". This is a collection of open-source games that showcases how to use PixiJS to create games and is released under the MIT license. The purpose of these games is to provide professional examples of how to use PixiJS for game development.</p><p>The first two games released are a match-3 game and a bubble shooter game. These games not only demonstrate how to use PixiJS for game development but also how to use other libraries such as PixiJS UI and AssetPack. We also have more games planned for release, which will demonstrate how to use PixiJS with other libraries such as PixiJS Layout and PixiJS React.</p><p>PixiJS Open Games will hopefully be a valuable resource for game developers who want to learn how to use PixiJS for game development and will also be a great source of inspiration for developers looking to create their own games using PixiJS. The project is available on GitHub for anyone who wants to explore the code or contribute to the project.</p><ul><li><a href="https://github.com/pixijs/open-games" target="_blank" rel="noopener noreferrer">Github Repo</a></li><li><a href="https://puzzling-potions.netlify.app/" target="_blank" rel="noopener noreferrer">Play Puzzling Potions</a></li><li><a href="https://bubbo-bubbo.netlify.app/" target="_blank" rel="noopener noreferrer">Play Bubbo Bubbo</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-ui--pixijs-layout">PixiJS UI &amp; PixiJS Layout‚Äã<a href="#pixijs-ui--pixijs-layout" class="hash-link" aria-label="Direct link to PixiJS UI &amp; PixiJS Layout‚Äã" title="Direct link to PixiJS UI &amp; PixiJS Layout‚Äã">‚Äã</a></h3><p>PixiJS UI is a new library for developers who want to create beautiful and functional user interfaces with PixiJS. The library includes a range of components such as buttons, checkboxes, sliders, text inputs, scroll views, lists, radio buttons, and progress bars, which can be easily integrated into your game. These components are highly customizable, allowing you to tweak the appearance and behaviour of each element to fit your game's specific needs.</p><p>PixiJS UI has been used in all of the open-source games, so feel free to check these out for real-world examples.</p><ul><li><a href="https://github.com/pixijs/ui" target="_blank" rel="noopener noreferrer">PixiJS UI Github Repo</a></li></ul><p>PixiJS Layout is another library that can make your life as a developer easier. This library enables you to create responsive layouts using PixiJS, which means you can design interfaces that adapt to different screen sizes and aspect ratios. PixiJS Layout works well with PixiJS UI, allowing you to combine both libraries to create complex, dynamic interfaces that respond to user input and screen changes.</p><p>With PixiJS Layout, you have the flexibility to create resizable layouts that can be adjusted to fit any screen size or device. This means that your game's interface can look great on everything from small mobile devices to large desktop displays.</p><p>PixiJS Layout is still under development but will be ready in the next few weeks</p><ul><li><a href="https://github.com/pixijs/layout" target="_blank" rel="noopener noreferrer">PixiJS Layout Github Repo</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="assetpack">AssetPack‚Äã<a href="#assetpack" class="hash-link" aria-label="Direct link to AssetPack‚Äã" title="Direct link to AssetPack‚Äã">‚Äã</a></h3><p>Finally, for phase 1 we are announcing AssetPack.</p><p>Asset management is an important part of developing applications, and the new AssetPack library aims to make this process easier. AssetPack is a framework-agnostic library that can be used with any framework, including PixiJS, ThreeJS, and Phaser. It provides a range of features that help developers manage their assets efficiently.
The key feature of AssetPack is the ability to automatically generate new assets on the fly. For example, you can provide it with a folder of individual images and it will generate sprite sheets, which can significantly improve the performance of your application. It also provides plugins to generate mipmaps, convert fonts to different formats, convert audio to different formats, compress images, and minify JSON. These features help developers optimize their assets for faster loading times, better performance, and improved user experience.</p><p>We will soon be releasing a new blog post that provides more details on how to use it. With its many useful features and framework-agnostic design. However, if you want to get stuck in today then check out the GitHub repo</p><ul><li><a href="https://github.com/pixijs/assetpack" target="_blank" rel="noopener noreferrer">Github Repo</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="phase-2">Phase 2‚Äã<a href="#phase-2" class="hash-link" aria-label="Direct link to Phase 2‚Äã" title="Direct link to Phase 2‚Äã">‚Äã</a></h2><p>Phase 2 will begin shortly and aims to make it easier to work with PixiJS applications.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-jumpstart">PixiJS JumpStart‚Äã<a href="#pixijs-jumpstart" class="hash-link" aria-label="Direct link to PixiJS JumpStart‚Äã" title="Direct link to PixiJS JumpStart‚Äã">‚Äã</a></h3><p>Jumpstart is a new CLI tool being developed by the PixiJS team to simplify the process of creating new PixiJS applications. With this tool, developers will no longer need to set up complicated tooling or worry about setting up different bundlers and frameworks. The tool will handle all the setup for you, allowing you to focus on building your application.</p><p>Jumpstart will be similar to other CLI tools such as Create-React-App or Create-Vue, which have become popular in the front-end development community. The tool will provide templates for different bundlers and frameworks, including webpack, parcel, rollup, and more. This will make it easy for developers to get started with PixiJS regardless of their preferred tools and workflows. With Jumpstart, you'll be able to create a new PixiJS application in just a few minutes and start building right away.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-dev-tools">PixiJS Dev Tools‚Äã<a href="#pixijs-dev-tools" class="hash-link" aria-label="Direct link to PixiJS Dev Tools‚Äã" title="Direct link to PixiJS Dev Tools‚Äã">‚Äã</a></h3><p>PixiJS dev tools will be a browser extension that is planned to be released soon to help developers debug their PixiJS applications. This tool aims to make it easier for developers to understand the inner workings of PixiJS, optimize their code, and follow best practices. It is designed to help developers diagnose performance issues and visualize the resources that their applications are consuming.</p><p>One of the key features of the PixiJS Dev Tools is its ability to help developers understand the complex process of batching in PixiJS. Batching is a technique used to optimize the rendering of multiple objects in the same draw call. This process can be complicated to understand, especially for new developers. PixiJS Dev Tools aims to make it easier to debug and optimize the rendering of objects.</p><p>Overall, PixiJS Dev Tools will be a powerful tool that will make it easier for developers to build high-performance, visually stunning applications with PixiJS. By providing developers with a deeper understanding of the inner workings of PixiJS, this toolset will help developers optimize their code and create more efficient and engaging applications.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="phase-3">Phase 3‚Äã<a href="#phase-3" class="hash-link" aria-label="Direct link to Phase 3‚Äã" title="Direct link to Phase 3‚Äã">‚Äã</a></h2><p>Phase 3 is where our long-term projects start to be revealed. These are major changes to the PixiJS ecosystem that we are incredibly excited about</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="comet">Comet‚Äã<a href="#comet" class="hash-link" aria-label="Direct link to Comet‚Äã" title="Direct link to Comet‚Äã">‚Äã</a></h3><p>Comet will be a new editor that aims to make it easier than ever to design and create games and applications with PixiJS. With its intuitive and user-friendly interface, the editor is designed to appeal to both designers and developers, allowing both groups to collaborate and work more efficiently.</p><p>One of the standout features of Comet is the visual interface it provides for creating and editing scenes, sprites, animations, and more. This means that designers can create and edit complex scenes without ever having to write a single line of code. The editor provides a range of tools and options for creating sprites, animations, and other game elements, making it easy to get started with creating a game or application.</p><p>In addition, developers will appreciate the runtime player feature, which allows them to easily recreate scenes in their own applications. This makes it easy to test and iterate on designs, ensuring that the final product is both functional and visually appealing. And with multi-user, real-time collaboration, Comet makes it easy for teams to work together, sharing assets and ideas and creating high-quality games and applications in record time.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-v8">PixiJS v8‚Äã<a href="#pixijs-v8" class="hash-link" aria-label="Direct link to PixiJS v8‚Äã" title="Direct link to PixiJS v8‚Äã">‚Äã</a></h3><p>PixiJS v8 will be the next major release that represents a complete rewrite of PixiJS from the ground up. The development team has leveraged their extensive experience over many years to make improvements and optimizations to the core PixiJS engine. The new version of PixiJS is designed to be faster and more efficient, providing a significant improvement in rendering performance compared to v7 (currently sitting at x2)</p><p>One of the most exciting features of PixiJS v8 is the inclusion of first-class support for WebGPU, which is a new graphics API that is being developed by major browser vendors. This will enable developers to take advantage of advanced GPU capabilities, which can significantly improve the performance of graphics-intensive applications. In addition to WebGPU support, the PixiJS team has also made a significant effort to optimize the engine for the canvas renderer, which will be available as a first-class option for developers looking to reduce bundle size.</p><p>Overall, PixiJS v8 represents a major leap forward for us, developers can expect a much faster and more efficient engine that is better suited for building complex, graphics-intensive applications.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="phase-4">Phase 4‚Äã<a href="#phase-4" class="hash-link" aria-label="Direct link to Phase 4‚Äã" title="Direct link to Phase 4‚Äã">‚Äã</a></h2><p>Phase 4 represents a leap into new territory for PixiJS as we look to delve deeper into areas outside of strictly 2D rendering.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-3d">PixiJS 3D‚Äã<a href="#pixijs-3d" class="hash-link" aria-label="Direct link to PixiJS 3D‚Äã" title="Direct link to PixiJS 3D‚Äã">‚Äã</a></h3><p>For years, Goodboy (now Playco) has had an internal 3D engine called Odie that was built on top of PixiJS. We are now planning to open-source it, which is exciting for those of you who want to seamlessly mix 2D and 3D content in your games or applications. With PixiJS 3D, you will no longer need to switch between engines or frameworks to incorporate 3D elements in your project.</p><p>Although this is a long-term project, the team is making progress and plans to share more information later in the year. This release will greatly expand PixiJS's capabilities and give developers even more flexibility when building their applications.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pixijs-game-engine">PixiJS Game Engine‚Äã<a href="#pixijs-game-engine" class="hash-link" aria-label="Direct link to PixiJS Game Engine‚Äã" title="Direct link to PixiJS Game Engine‚Äã">‚Äã</a></h3><p>Finally, we are thrilled to announce that we will be working on a new library called PixiJS Game Engine. This game engine aims to provide everything you would expect from a 2D/3D game engine and will offer many features and tools to make game development easier and more efficient.</p><p>Some of the features of PixiJS Game Engine will include support for physics engines, audio, input handling, asset loading and management, state management, animation and tweening, and more.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">‚Äã</a></h2><p>We've shared a lot of exciting news about new projects and updates coming to the PixiJS community. There's a lot to look forward to in the upcoming months.</p><p>We want to extend our sincere thanks to the PixiJS community, its contributors, and Playco for making all of this possible. We're excited to see what you'll create with these new tools and resources, and we look forward to continuing to support and grow the PixiJS ecosystem. Be sure to check out the GitHub links mentioned above and stay tuned for more updates on the PixiJS Universe!</p>]]></content>
        <author>
            <name>Zyie</name>
            <uri>https://github.com/zyie</uri>
        </author>
        <category label="PixiJS" term="PixiJS"/>
        <category label="PixiJS Universe" term="PixiJS Universe"/>
    </entry>
</feed>